From 49e30ce70b98d6a33037ee6e2c224ba3a88cce2b Mon Sep 17 00:00:00 2001
From: William Douglas <william.douglas@intel.com>
Date: Fri, 1 Dec 2023 12:06:58 -0800
Subject: [PATCH] force new tbb interface

---
 .../math/prim/core/init_threadpool_tbb.hpp    | 36 -------------------
 1 file changed, 36 deletions(-)

diff --git a/inst/include/stan/math/prim/core/init_threadpool_tbb.hpp b/inst/include/stan/math/prim/core/init_threadpool_tbb.hpp
index cd4435b..9afae7b 100644
--- a/inst/include/stan/math/prim/core/init_threadpool_tbb.hpp
+++ b/inst/include/stan/math/prim/core/init_threadpool_tbb.hpp
@@ -5,12 +5,8 @@
 
 #include <boost/lexical_cast.hpp>
 
-#ifdef TBB_INTERFACE_NEW
 #include <tbb/global_control.h>
 #include <tbb/task_arena.h>
-#else
-#include <tbb/task_scheduler_init.h>
-#endif
 
 #include <cstdlib>
 #include <thread>
@@ -64,7 +60,6 @@ inline int get_num_threads() {
 
 }  // namespace internal
 
-#ifdef TBB_INTERFACE_NEW
 /**
  * Initialize the Intel TBB threadpool and global scheduler through
  * the tbb::global_control object. In case an instance of the
@@ -92,37 +87,6 @@ inline tbb::global_control& init_threadpool_tbb() {
 
   return tbb_scheduler;
 }
-#else
-/**
- * Initialize the Intel TBB threadpool and global scheduler through
- * the tbb::task_scheduler_init object. In case an instance of the
- * tbb::task_scheduler_object has been instantiated prior to calling
- * this function, then any subsequent initialization is ignored by the
- * Intel TBB.
- *
- * The maximal number of threads is read from the environment variable
- * STAN_NUM_THREADS using internal::get_num_threads. See conventions
- * of get_num_threads. The TBB scheduler will be activated by calling
- * this function.
- *
- * The function returns a reference to the static
- * tbb::task_scheduler_init instance.
- *
- * @param stack_size sets the stack size of each thread; the default 0
- * let's the TBB choose the stack size
- * @return reference to the static tbb::task_scheduler_init
- * @throws std::runtime_error if the value of STAN_NUM_THREADS env. variable
- * is invalid
- */
-inline tbb::task_scheduler_init& init_threadpool_tbb(
-    tbb::stack_size_type stack_size = 0) {
-  int tbb_max_threads = internal::get_num_threads();
-
-  static tbb::task_scheduler_init tbb_scheduler(tbb_max_threads, stack_size);
-
-  return tbb_scheduler;
-}
-#endif
 
 }  // namespace math
 }  // namespace stan
-- 
2.43.0

